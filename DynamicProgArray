/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package temporary;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Ricardo KAKA
 */
public class Temporary  {
    public static void main(String args[]){
        Temporary.dynamicCalculation();
    }
    
    
      
    public static void maxSequence(){
        int a[] = new int[]{1,-2,3,10,-4,7,2,-5}; 
        int temp[][] = new int[a.length][a.length];
        for(int i = 0 ; i < temp.length ; i ++ ){
            for(int j = 0 ; j < temp.length ; j++){
                
                temp[i][j] = 0 ;
                
            }
        }
        
        for(int i = 0 ; i < temp.length ; i ++ ){
            for(int j = 0 ; j < temp.length ; j++){
               if( i == 0 && j == 0){
                   temp[i][j] = a[i];
               }else{
                   if(i == j)
                       temp[i][j] = temp[i][j-1];
                   else{
                       if( j == 0){
                           if(a[i] + a[j] > a[i]){
                               temp[i][j] = a[i] + a[j];
                           }else
                               temp[i][j] = a[i];
                       }else{
                       if(temp[i][j-1] + a[j] > temp[i][j-1])
                           temp[i][j] = temp[i][j-1] + a[j];
                       else
                           temp[i][j] = temp[i][j-1];
                       }
                   }
               }
            }
        }
        
        
        int max = 0 ;
        int indexi = 0;
        int indexj = 0;
        for(int i = 0 ; i < temp.length ; i++){
            for(int j = 0 ; j < temp.length ; j++){
        
                if(i == 3)
                    System.out.println(temp[i][j]);
                if(temp[i][j] > max){
                    max = temp[i][j];
                    indexi = i ;
                    indexj = j ;
                }
                
            }
        }
        
        System.out.println("Max" + max+ " :: i " + indexi + " j " + indexj);
       System.out.println("max" + temp[indexi][0] );
        for(int i = 0 ; i <= indexj ; i++){
            if(i == 0  ){
                if(indexi == 0)
                    System.out.println("a ="+a[indexi]);
                if(temp[indexi][0] != a[indexi]){
                    System.out.println("a ="+a[indexi]);
                
                }
            }else{ 
                if(temp[indexi][i] == temp[indexi][i-1]){
                
                }else{
                    System.out.println(a[i]);
                }
            }
                
        }
        
        
        
    }
    
    
    // Add 
    
    public static ArrayList dynamicCalculation(){
        
        
        int a[] = new int[]{1, -2, 3, 10, -4, 7, 2, -5};
        int temp[][] = new int[a.length][a.length];
       // a[] = ;
        
        for(int i = 0 ; i < temp.length ; i++){
            for(int j = 0 ; j < temp.length ; j++){
                temp[i][j] =0; 
            }
        }
        for(int i = 0 ; i < a.length ; i++){
            for(int j = i ; j <a.length ; j++){
                if( j == i){
                    temp[i][j] = a[i];
                }else{
                    temp[i][j] = a[j] + temp[i][j-1];
                }
            }
        }
        
        int max = 0 ;
        int indexi = 0;
        int indexj = 0;
        for(int i = 0 ; i < temp.length ; i++){
            for(int j = 0 ; j < temp.length ; j++){
                if(temp[i][j] > max){
                    max = temp[i][j];
                    indexi = i ;
                    indexj = j ;
                }
                
            }
        }
        
        System.out.println("Max" + max + "Indexi " + indexi + "Indexj" + indexj );
        
        return null ;
    }

}
